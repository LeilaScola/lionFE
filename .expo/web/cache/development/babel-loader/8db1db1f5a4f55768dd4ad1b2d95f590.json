{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\sarah\\\\Documents\\\\GitHub\\\\lionFE\\\\src\\\\screens\\\\Help.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport styles from \"../../assets/styles\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Buttons } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport qs from 'qs';\nimport Linking from \"react-native-web/dist/exports/Linking\";\n\nvar TabIcon = function TabIcon(props) {\n  return React.createElement(Ionicons, {\n    name: 'md-home',\n    size: 35,\n    color: props.focused ? 'grey' : 'darkgrey',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  });\n};\n\nvar HelpScreen = function (_React$Component) {\n  _inherits(HelpScreen, _React$Component);\n\n  var _super = _createSuper(HelpScreen);\n\n  function HelpScreen() {\n    _classCallCheck(this, HelpScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HelpScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.homeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.homeHead,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.home,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"Help\"), React.createElement(View, {\n        style: styles.homeSub,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, \"Let us know if you have any questions,\", \"\\n\", \"\\n\", \"comments, or concerns\")), React.createElement(View, {\n        style: styles.helpBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, \"First Name\"), React.createElement(TextInput, {\n        style: styles.textSearch,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Name...\",\n        placeholderTextColor: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, \"Last Name\"), React.createElement(TextInput, {\n        style: styles.textSearch,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Name...\",\n        placeholderTextColor: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, \"Message\"), React.createElement(TextInput, {\n        style: styles.textSearch,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Name...\",\n        placeholderTextColor: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this2.sendEmail('sensibleappteam@gmail.com', 'Sensible App Comment');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return HelpScreen;\n}(React.Component);\n\nHelpScreen.navigationOptions = {\n  tabBarIcon: TabIcon\n};\nexport { HelpScreen as default };","map":{"version":3,"sources":["C:/Users/sarah/Documents/GitHub/lionFE/src/screens/Help.js"],"names":["React","Component","styles","Buttons","qs","TabIcon","props","focused","HelpScreen","homeContainer","homeHead","home","homeSub","helpBody","input","textSearch","submitButton","sendEmail","submitButtonText","navigationOptions","tabBarIcon"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAGA,OAAOC,MAAP;;;SAC4BC,O;;AAE5B,OAAOC,EAAP,MAAe,IAAf;;;AA8BA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SACZ,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,SADR;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAEA,KAAK,CAACC,OAAN,GAAgB,MAAhB,GAAyB,UAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY;AAAA,CAAhB;;IAQqBC,U;;;;;;;;;;;;;6BAMR;AAAA;;AACL,aACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEK,IAFL,EAEW,IAFX,0BAJJ,CADJ,EAYI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAII,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIZ,MAAM,CAACa,UAA3B;AACI,QAAA,qBAAqB,EAAG,aAD5B;AAEI,QAAA,WAAW,EAAG,SAFlB;AAGI,QAAA,oBAAoB,EAAG,MAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,EAYI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIZ,MAAM,CAACa,UAA3B;AACI,QAAA,qBAAqB,EAAG,aAD5B;AAEI,QAAA,WAAW,EAAG,SAFlB;AAGI,QAAA,oBAAoB,EAAG,MAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAZJ,EAsCI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAII,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIZ,MAAM,CAACa,UAA3B;AACI,QAAA,qBAAqB,EAAG,aAD5B;AAEI,QAAA,WAAW,EAAG,SAFlB;AAGI,QAAA,oBAAoB,EAAG,MAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAtCJ,EAkDI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAIb,MAAM,CAACc,YADpB;AAEI,QAAA,OAAO,EAAI;AAAA,iBAAM,MAAI,CAACC,SAAL,CAAe,2BAAf,EAA2C,sBAA3C,CAAN;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIf,MAAM,CAACgB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CAlDJ,CADJ,CAZJ,CADA;AA0EH;;;;EAjFmClB,KAAK,CAACC,S;;AAAzBO,U,CAEVW,iB,GAAoB;AACzBC,EAAAA,UAAU,EAAEf;AADa,C;SAFVG,U","sourcesContent":["import React, { Component } from 'react'\r\nimport { Image, View, TouchableOpacity } from 'react-native'\r\nimport { StyleSheet, Text, Picker } from 'react-native';\r\nimport styles from '../../assets/styles';\r\nimport { ScrollView, Alert, Buttons} from 'react-native';\r\nimport { TextInput } from 'react-native'\r\nimport qs from 'qs';\r\nimport { Linking } from 'react-native';\r\n\r\n\r\n// sendEmail = async(to, subject, body, options = {}) => {\r\n//     const { cc, bcc } = options;\r\n\r\n//     let url = `mailto:${to}`;\r\n\r\n//     // Create email link query\r\n//     const query = qs.stringify({\r\n//         subject: subject,\r\n//         body: body,\r\n//         cc: cc,\r\n//         bcc: bcc\r\n//     });\r\n\r\n//     if (query.length) {\r\n//         url += `?${query}`;\r\n//     }\r\n\r\n//     // check if we can use this link\r\n//     const canOpen = await Linking.canOpenURL(url);\r\n\r\n//     if (!canOpen) {\r\n//         throw new Error('Provided URL can not be handled');\r\n//     }\r\n\r\n//     return Linking.openURL(url);   \r\n// }\r\nconst TabIcon = (props) => (\r\n    <Ionicons\r\n      name={'md-home'}\r\n      size={35}\r\n      color={props.focused ? 'grey' : 'darkgrey'}\r\n    />\r\n)\r\n\r\nexport default class HelpScreen extends React.Component {\r\n\r\n    static navigationOptions = {\r\n      tabBarIcon: TabIcon\r\n    };\r\n  \r\n    render() {\r\n        return (    \r\n        <View style={styles.homeContainer}>\r\n            <View style={styles.homeHead}>\r\n                <View style={styles.home}>\r\n                    Help\r\n                </View>\r\n                <View style={styles.homeSub}>\r\n                    Let us know if you have any questions,\r\n                    {\"\\n\"}{\"\\n\"}\r\n                    comments, or concerns\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.helpBody}>\r\n                <View>\r\n                    <View style={styles.input}>\r\n                        <View>\r\n                            First Name\r\n                        </View>\r\n                        <TextInput style = {styles.textSearch}\r\n                            underlineColorAndroid = \"transparent\"\r\n                            placeholder = \"Name...\"\r\n                            placeholderTextColor = \"grey\"\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={styles.input}>\r\n                        <View>\r\n                            Last Name\r\n                        </View>\r\n                        <TextInput style = {styles.textSearch}\r\n                            underlineColorAndroid = \"transparent\"\r\n                            placeholder = \"Name...\"\r\n                            placeholderTextColor = \"grey\"\r\n                        />\r\n                    </View>\r\n\r\n                    {/* <View>\r\n                        <Text style={{alignSelf: \"center\", marginBottom: 5, fontSize: fontStyles.regularText}}>Filter By...</Text>\r\n                            {/* <Picker \r\n                                selectedValue = {this.state.filter} \r\n                                onValueChange = {(itemValue, itemIndex) => this.setState({filter: itemValue})}\r\n                                style={{ marginTop: 0}}\r\n                                mode = {'dropdown'}\r\n                                itemStyle={{fontSize: fontStyles.regularText}}>\r\n                                <Picker.Item label = \"Help\" value = \"help\" />\r\n                                <Picker.Item label = \"Concern\" value = \"concern\" />\r\n                                <Picker.Item label = \"Comment\" value = \"comment\" />\r\n                                <Picker.Item label = \"Complaint\" value = \"complaint\" />\r\n                            </Picker> }\r\n                    </View> */}\r\n\r\n                    <View style={styles.input}>\r\n                        <View>\r\n                            Message\r\n                        </View>\r\n                        <TextInput style = {styles.textSearch}\r\n                            underlineColorAndroid = \"transparent\"\r\n                            placeholder = \"Name...\"\r\n                            placeholderTextColor = \"grey\"\r\n                        />\r\n                    </View>\r\n                    \r\n\r\n                    <TouchableOpacity  \r\n                        style = {styles.submitButton}\r\n                        onPress = {() => this.sendEmail('sensibleappteam@gmail.com','Sensible App Comment')}>\r\n                        <Text style = {styles.submitButtonText}>Submit</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}