{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\Documents\\\\GitHub\\\\lionFE\\\\src\\\\TabNavigator.js\",\n    _this2 = this;\n\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { HomeStackScreen, AboutStackScreen, HelpStackScreen } from \"./StackNavigator\";\nimport HelpScreen from \"./screens/Help\";\n\nfunction BottomNav(_ref) {\n  var _this = this;\n\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityState: isFocused ? {\n        selected: true\n      } : {},\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: isFocused ? '#673ab7' : '#222'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, label));\n  }));\n}\n\nvar Tab = createBottomTabNavigator();\n\nvar BottomTabNavigator = function BottomTabNavigator() {\n  return React.createElement(Tab.Navigator, {\n    tabBar: function tabBar(props) {\n      return React.createElement(BottomNav, _extends({}, props, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"About\",\n    component: AboutStackScreen,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeStackScreen,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Help\",\n    component: HelpScreen,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default BottomTabNavigator;","map":{"version":3,"sources":["C:/Users/sarah/Documents/GitHub/lionFE/src/TabNavigator.js"],"names":["React","createBottomTabNavigator","HomeStackScreen","AboutStackScreen","HelpStackScreen","HelpScreen","BottomNav","state","descriptors","navigation","flexDirection","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","selected","tabBarAccessibilityLabel","tabBarTestID","flex","color","Tab","BottomTabNavigator","props"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { HomeStackScreen, AboutStackScreen, HelpStackScreen } from \"./StackNavigator\";\r\nimport HelpScreen from './screens/Help';\r\n\r\nfunction BottomNav({ state, descriptors, navigation }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row' }}>\r\n      {state.routes.map((route, index) => {\r\n        const { options } = descriptors[route.key];\r\n        const label =\r\n          options.tabBarLabel !== undefined\r\n            ? options.tabBarLabel\r\n            : options.title !== undefined\r\n            ? options.title\r\n            : route.name;\r\n\r\n        const isFocused = state.index === index;\r\n\r\n        const onPress = () => {\r\n          const event = navigation.emit({\r\n            type: 'tabPress',\r\n            target: route.key,\r\n          });\r\n\r\n          if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n          }\r\n        };\r\n\r\n        const onLongPress = () => {\r\n          navigation.emit({\r\n            type: 'tabLongPress',\r\n            target: route.key,\r\n          });\r\n        };\r\n\r\n        return (\r\n          <TouchableOpacity\r\n            accessibilityRole=\"button\"\r\n            accessibilityState={isFocused ? { selected: true } : {}}\r\n            accessibilityLabel={options.tabBarAccessibilityLabel}\r\n            testID={options.tabBarTestID}\r\n            onPress={onPress}\r\n            onLongPress={onLongPress}\r\n            style={{ flex: 1 }}\r\n          >\r\n            <Text style={{ color: isFocused ? '#673ab7' : '#222' }}>\r\n              {label}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst BottomTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator tabBar={props => <BottomNav {...props} />}>\r\n        <Tab.Screen name=\"About\" component={AboutStackScreen}/>\r\n        <Tab.Screen name=\"Home\" component={HomeStackScreen} />\r\n        <Tab.Screen name=\"Help\" component={HelpScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default BottomTabNavigator;"]},"metadata":{},"sourceType":"module"}