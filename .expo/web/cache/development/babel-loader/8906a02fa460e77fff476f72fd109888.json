{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport AccessibilityUtil from \"../AccessibilityUtil\";\nimport css from \"../../exports/StyleSheet/css\";\nimport StyleSheet from \"../../exports/StyleSheet\";\nimport styleResolver from \"../../exports/StyleSheet/styleResolver\";\nimport { STYLE_GROUPS } from \"../../exports/StyleSheet/constants\";\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar uppercasePattern = /[A-Z]/g;\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateString(str) {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\n\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar createDOMProps = function createDOMProps(elementType, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityActiveDescendant = _props.accessibilityActiveDescendant,\n      accessibilityAtomic = _props.accessibilityAtomic,\n      accessibilityAutoComplete = _props.accessibilityAutoComplete,\n      accessibilityBusy = _props.accessibilityBusy,\n      accessibilityChecked = _props.accessibilityChecked,\n      accessibilityColumnCount = _props.accessibilityColumnCount,\n      accessibilityColumnIndex = _props.accessibilityColumnIndex,\n      accessibilityColumnSpan = _props.accessibilityColumnSpan,\n      accessibilityControls = _props.accessibilityControls,\n      accessibilityDescribedBy = _props.accessibilityDescribedBy,\n      accessibilityDetails = _props.accessibilityDetails,\n      accessibilityDisabled = _props.accessibilityDisabled,\n      accessibilityErrorMessage = _props.accessibilityErrorMessage,\n      accessibilityExpanded = _props.accessibilityExpanded,\n      accessibilityFlowTo = _props.accessibilityFlowTo,\n      accessibilityHasPopup = _props.accessibilityHasPopup,\n      accessibilityHidden = _props.accessibilityHidden,\n      accessibilityInvalid = _props.accessibilityInvalid,\n      accessibilityKeyShortcuts = _props.accessibilityKeyShortcuts,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLabelledBy = _props.accessibilityLabelledBy,\n      accessibilityLevel = _props.accessibilityLevel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityModal = _props.accessibilityModal,\n      accessibilityMultiline = _props.accessibilityMultiline,\n      accessibilityMultiSelectable = _props.accessibilityMultiSelectable,\n      accessibilityOrientation = _props.accessibilityOrientation,\n      accessibilityOwns = _props.accessibilityOwns,\n      accessibilityPlaceholder = _props.accessibilityPlaceholder,\n      accessibilityPosInSet = _props.accessibilityPosInSet,\n      accessibilityPressed = _props.accessibilityPressed,\n      accessibilityReadOnly = _props.accessibilityReadOnly,\n      accessibilityRequired = _props.accessibilityRequired,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityRoleDescription = _props.accessibilityRoleDescription,\n      accessibilityRowCount = _props.accessibilityRowCount,\n      accessibilityRowIndex = _props.accessibilityRowIndex,\n      accessibilityRowSpan = _props.accessibilityRowSpan,\n      accessibilitySelected = _props.accessibilitySelected,\n      accessibilitySetSize = _props.accessibilitySetSize,\n      accessibilitySort = _props.accessibilitySort,\n      accessibilityValueMax = _props.accessibilityValueMax,\n      accessibilityValueMin = _props.accessibilityValueMin,\n      accessibilityValueNow = _props.accessibilityValueNow,\n      accessibilityValueText = _props.accessibilityValueText,\n      classList = _props.classList,\n      dataSet = _props.dataSet,\n      focusable = _props.focusable,\n      nativeID = _props.nativeID,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityState = _props.accessibilityState,\n      accessibilityValue = _props.accessibilityValue,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityActiveDescendant\", \"accessibilityAtomic\", \"accessibilityAutoComplete\", \"accessibilityBusy\", \"accessibilityChecked\", \"accessibilityColumnCount\", \"accessibilityColumnIndex\", \"accessibilityColumnSpan\", \"accessibilityControls\", \"accessibilityDescribedBy\", \"accessibilityDetails\", \"accessibilityDisabled\", \"accessibilityErrorMessage\", \"accessibilityExpanded\", \"accessibilityFlowTo\", \"accessibilityHasPopup\", \"accessibilityHidden\", \"accessibilityInvalid\", \"accessibilityKeyShortcuts\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLevel\", \"accessibilityLiveRegion\", \"accessibilityModal\", \"accessibilityMultiline\", \"accessibilityMultiSelectable\", \"accessibilityOrientation\", \"accessibilityOwns\", \"accessibilityPlaceholder\", \"accessibilityPosInSet\", \"accessibilityPressed\", \"accessibilityReadOnly\", \"accessibilityRequired\", \"accessibilityRole\", \"accessibilityRoleDescription\", \"accessibilityRowCount\", \"accessibilityRowIndex\", \"accessibilityRowSpan\", \"accessibilitySelected\", \"accessibilitySetSize\", \"accessibilitySort\", \"accessibilityValueMax\", \"accessibilityValueMin\", \"accessibilityValueNow\", \"accessibilityValueText\", \"classList\", \"dataSet\", \"focusable\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityState\", \"accessibilityValue\"]);\n\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || accessibilityDisabled;\n  var role = AccessibilityUtil.propsToAriaRole(props);\n  var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea' || domProps.contentEditable != null;\n\n  if (accessibilityState != null) {\n    for (var prop in accessibilityState) {\n      var value = accessibilityState[prop];\n\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[\"aria-\" + prop] = value;\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[\"aria-\" + prop] = value;\n        }\n      }\n    }\n  }\n\n  if (accessibilityValue != null) {\n    for (var _prop in accessibilityValue) {\n      var _value = accessibilityValue[_prop];\n\n      if (_value != null) {\n        domProps[\"aria-value\" + _prop] = _value;\n      }\n    }\n  }\n\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = accessibilityControls;\n  }\n\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = accessibilityDescribedBy;\n  }\n\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n\n    if (elementType === 'button' || elementType === 'form' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.disabled = true;\n    }\n  }\n\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = accessibilityFlowTo;\n  }\n\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = accessibilityLabelledBy;\n  }\n\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = accessibilityOwns;\n  }\n\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly;\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired;\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n\n  if (role != null) {\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  }\n\n  if (dataSet != null) {\n    for (var dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        var dataName = hyphenateString(dataProp);\n        var dataValue = dataSet[dataProp];\n\n        if (dataValue != null) {\n          domProps[\"data-\" + dataName] = dataValue;\n        }\n      }\n    }\n  }\n\n  var _focusable = focusable != null ? focusable : accessible;\n\n  if (elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n    if (_focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if (role === 'button' || role === 'checkbox' || role === 'link' || role === 'menuitem' || role === 'radio' || role === 'textbox' || role === 'switch') {\n    if (_focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (_focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  }\n\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle);\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = elementType === 'a' || elementType === 'button' || elementType === 'li' || elementType === 'ul' || role === 'heading';\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList];\n\n  var _styleResolver$resolv = styleResolver.resolve(reactNativeStyle, finalClassList),\n      className = _styleResolver$resolv.className,\n      style = _styleResolver$resolv.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n\n  if (isNativeInteractiveElement || role === 'button' || role === 'menuitem' || _focusable === true && !disabled) {\n    var onClick = domProps.onClick;\n\n    if (onClick != null) {\n      if (disabled) {\n        domProps.onClick = function (e) {\n          e.stopPropagation();\n        };\n      } else if (!isNativeInteractiveElement) {\n        var onKeyDown = domProps.onKeyDown;\n\n        domProps.onKeyDown = function (e) {\n          var key = e.key,\n              repeat = e.repeat;\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n          var isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (onKeyDown != null) {\n            onKeyDown(e);\n          }\n\n          if (!repeat && key === 'Enter') {\n            onClick(e);\n          } else if (isSpacebarKey && isButtonRole) {\n            if (!repeat) {\n              onClick(e);\n            }\n\n            e.preventDefault();\n          }\n        };\n      }\n    }\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;","map":{"version":3,"sources":["C:/Users/sarah/Documents/GitHub/lionFE/node_modules/react-native-web/dist/modules/createDOMProps/index.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","AccessibilityUtil","css","StyleSheet","styleResolver","STYLE_GROUPS","emptyObject","hasOwnProperty","prototype","uppercasePattern","toHyphenLower","match","toLowerCase","hyphenateString","str","replace","classes","create","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","classicReset","pointerEventsStyles","auto","pointerEvents","none","createDOMProps","elementType","props","_props","accessibilityActiveDescendant","accessibilityAtomic","accessibilityAutoComplete","accessibilityBusy","accessibilityChecked","accessibilityColumnCount","accessibilityColumnIndex","accessibilityColumnSpan","accessibilityControls","accessibilityDescribedBy","accessibilityDetails","accessibilityDisabled","accessibilityErrorMessage","accessibilityExpanded","accessibilityFlowTo","accessibilityHasPopup","accessibilityHidden","accessibilityInvalid","accessibilityKeyShortcuts","accessibilityLabel","accessibilityLabelledBy","accessibilityLevel","accessibilityLiveRegion","accessibilityModal","accessibilityMultiline","accessibilityMultiSelectable","accessibilityOrientation","accessibilityOwns","accessibilityPlaceholder","accessibilityPosInSet","accessibilityPressed","accessibilityReadOnly","accessibilityRequired","accessibilityRole","accessibilityRoleDescription","accessibilityRowCount","accessibilityRowIndex","accessibilityRowSpan","accessibilitySelected","accessibilitySetSize","accessibilitySort","accessibilityValueMax","accessibilityValueMin","accessibilityValueNow","accessibilityValueText","classList","dataSet","focusable","nativeID","providedStyle","style","testID","accessible","accessibilityState","accessibilityValue","domProps","disabled","role","propsToAriaRole","isNativeInteractiveElement","contentEditable","prop","value","_prop","_value","Array","isArray","join","readOnly","required","dataProp","call","dataName","dataValue","_focusable","tabIndex","reactNativeStyle","compose","needsCursor","needsReset","finalClassList","_styleResolver$resolv","resolve","className","id","onClick","e","stopPropagation","onKeyDown","repeat","isSpacebarKey","isButtonRole","preventDefault"],"mappings":"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","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar uppercasePattern = /[A-Z]/g;\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateString(str) {\n  return str.replace(uppercasePattern, toHyphenLower);\n} // Reset styles for heading, link, and list DOM elements\n\n\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar createDOMProps = function createDOMProps(elementType, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityActiveDescendant = _props.accessibilityActiveDescendant,\n      accessibilityAtomic = _props.accessibilityAtomic,\n      accessibilityAutoComplete = _props.accessibilityAutoComplete,\n      accessibilityBusy = _props.accessibilityBusy,\n      accessibilityChecked = _props.accessibilityChecked,\n      accessibilityColumnCount = _props.accessibilityColumnCount,\n      accessibilityColumnIndex = _props.accessibilityColumnIndex,\n      accessibilityColumnSpan = _props.accessibilityColumnSpan,\n      accessibilityControls = _props.accessibilityControls,\n      accessibilityDescribedBy = _props.accessibilityDescribedBy,\n      accessibilityDetails = _props.accessibilityDetails,\n      accessibilityDisabled = _props.accessibilityDisabled,\n      accessibilityErrorMessage = _props.accessibilityErrorMessage,\n      accessibilityExpanded = _props.accessibilityExpanded,\n      accessibilityFlowTo = _props.accessibilityFlowTo,\n      accessibilityHasPopup = _props.accessibilityHasPopup,\n      accessibilityHidden = _props.accessibilityHidden,\n      accessibilityInvalid = _props.accessibilityInvalid,\n      accessibilityKeyShortcuts = _props.accessibilityKeyShortcuts,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLabelledBy = _props.accessibilityLabelledBy,\n      accessibilityLevel = _props.accessibilityLevel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityModal = _props.accessibilityModal,\n      accessibilityMultiline = _props.accessibilityMultiline,\n      accessibilityMultiSelectable = _props.accessibilityMultiSelectable,\n      accessibilityOrientation = _props.accessibilityOrientation,\n      accessibilityOwns = _props.accessibilityOwns,\n      accessibilityPlaceholder = _props.accessibilityPlaceholder,\n      accessibilityPosInSet = _props.accessibilityPosInSet,\n      accessibilityPressed = _props.accessibilityPressed,\n      accessibilityReadOnly = _props.accessibilityReadOnly,\n      accessibilityRequired = _props.accessibilityRequired,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityRoleDescription = _props.accessibilityRoleDescription,\n      accessibilityRowCount = _props.accessibilityRowCount,\n      accessibilityRowIndex = _props.accessibilityRowIndex,\n      accessibilityRowSpan = _props.accessibilityRowSpan,\n      accessibilitySelected = _props.accessibilitySelected,\n      accessibilitySetSize = _props.accessibilitySetSize,\n      accessibilitySort = _props.accessibilitySort,\n      accessibilityValueMax = _props.accessibilityValueMax,\n      accessibilityValueMin = _props.accessibilityValueMin,\n      accessibilityValueNow = _props.accessibilityValueNow,\n      accessibilityValueText = _props.accessibilityValueText,\n      classList = _props.classList,\n      dataSet = _props.dataSet,\n      focusable = _props.focusable,\n      nativeID = _props.nativeID,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityState = _props.accessibilityState,\n      accessibilityValue = _props.accessibilityValue,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityActiveDescendant\", \"accessibilityAtomic\", \"accessibilityAutoComplete\", \"accessibilityBusy\", \"accessibilityChecked\", \"accessibilityColumnCount\", \"accessibilityColumnIndex\", \"accessibilityColumnSpan\", \"accessibilityControls\", \"accessibilityDescribedBy\", \"accessibilityDetails\", \"accessibilityDisabled\", \"accessibilityErrorMessage\", \"accessibilityExpanded\", \"accessibilityFlowTo\", \"accessibilityHasPopup\", \"accessibilityHidden\", \"accessibilityInvalid\", \"accessibilityKeyShortcuts\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLevel\", \"accessibilityLiveRegion\", \"accessibilityModal\", \"accessibilityMultiline\", \"accessibilityMultiSelectable\", \"accessibilityOrientation\", \"accessibilityOwns\", \"accessibilityPlaceholder\", \"accessibilityPosInSet\", \"accessibilityPressed\", \"accessibilityReadOnly\", \"accessibilityRequired\", \"accessibilityRole\", \"accessibilityRoleDescription\", \"accessibilityRowCount\", \"accessibilityRowIndex\", \"accessibilityRowSpan\", \"accessibilitySelected\", \"accessibilitySetSize\", \"accessibilitySort\", \"accessibilityValueMax\", \"accessibilityValueMin\", \"accessibilityValueNow\", \"accessibilityValueText\", \"classList\", \"dataSet\", \"focusable\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityState\", \"accessibilityValue\"]);\n\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || accessibilityDisabled;\n  var role = AccessibilityUtil.propsToAriaRole(props);\n  var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea' || domProps.contentEditable != null; // DEPRECATED\n\n  if (accessibilityState != null) {\n    for (var prop in accessibilityState) {\n      var value = accessibilityState[prop];\n\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[\"aria-\" + prop] = value; // also set prop directly to pick up host elementType behaviour\n\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[\"aria-\" + prop] = value;\n        }\n      }\n    }\n  }\n\n  if (accessibilityValue != null) {\n    for (var _prop in accessibilityValue) {\n      var _value = accessibilityValue[_prop];\n\n      if (_value != null) {\n        domProps[\"aria-value\" + _prop] = _value;\n      }\n    }\n  } // ACCESSIBILITY\n\n\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = accessibilityControls;\n  }\n\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = accessibilityDescribedBy;\n  }\n\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n\n  if (disabled === true) {\n    domProps['aria-disabled'] = true; // Enhance with native semantics\n\n    if (elementType === 'button' || elementType === 'form' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.disabled = true;\n    }\n  }\n\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = accessibilityFlowTo;\n  }\n\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = accessibilityLabelledBy;\n  }\n\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = accessibilityOwns;\n  }\n\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly; // Enhance with native semantics\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired; // Enhance with native semantics\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n\n  if (role != null) {\n    // 'presentation' synonym has wider browser support\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  } // \"dataSet\" replaced with \"data-*\"\n\n\n  if (dataSet != null) {\n    for (var dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        var dataName = hyphenateString(dataProp);\n        var dataValue = dataSet[dataProp];\n\n        if (dataValue != null) {\n          domProps[\"data-\" + dataName] = dataValue;\n        }\n      }\n    }\n  } // FOCUS\n  // \"focusable\" indicates that an element may be a keyboard tab-stop.\n\n\n  var _focusable = focusable != null ? focusable : accessible;\n\n  if ( // These native elements are focusable by default\n  elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n    if (_focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if ( // These roles are made focusable by default\n  role === 'button' || role === 'checkbox' || role === 'link' || role === 'menuitem' || role === 'radio' || role === 'textbox' || role === 'switch') {\n    if (_focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    // Everything else must explicitly set the prop\n    if (_focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  } // STYLE\n\n\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle); // Additional style resets for interactive elements\n\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = elementType === 'a' || elementType === 'button' || elementType === 'li' || elementType === 'ul' || role === 'heading'; // Classic CSS styles\n\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList]; // Resolve styles\n\n  var _styleResolver$resolv = styleResolver.resolve(reactNativeStyle, finalClassList),\n      className = _styleResolver$resolv.className,\n      style = _styleResolver$resolv.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  } // OTHER\n  // Native element ID\n\n\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  } // Automated test IDs\n\n\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  } // Keyboard accessibility\n  // Button-like roles should trigger 'onClick' if SPACE key is pressed.\n  // Button-like roles should not trigger 'onClick' if they are disabled.\n\n\n  if (isNativeInteractiveElement || role === 'button' || role === 'menuitem' || _focusable === true && !disabled) {\n    var onClick = domProps.onClick;\n\n    if (onClick != null) {\n      if (disabled) {\n        // Prevent click propagating if the element is disabled. See #1757\n        domProps.onClick = function (e) {\n          e.stopPropagation();\n        };\n      } else if (!isNativeInteractiveElement) {\n        // For native elements that are focusable but don't dispatch 'click' events\n        // for keyboards.\n        var onKeyDown = domProps.onKeyDown;\n\n        domProps.onKeyDown = function (e) {\n          var key = e.key,\n              repeat = e.repeat;\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n          var isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (onKeyDown != null) {\n            onKeyDown(e);\n          }\n\n          if (!repeat && key === 'Enter') {\n            onClick(e);\n          } else if (isSpacebarKey && isButtonRole) {\n            if (!repeat) {\n              onClick(e);\n            } // Prevent spacebar scrolling the window\n\n\n            e.preventDefault();\n          }\n        };\n      }\n    }\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;"]},"metadata":{},"sourceType":"module"}